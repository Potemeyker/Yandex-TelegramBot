import logging

from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, MessageHandler, ConversationHandler, filters
from telegram.constants import ParseMode

BOT_TOKEN = "7036753504:AAFm3lyztMcnPQFdsqts6xY7giMkfA2SHhY"

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)


async def start(update, context):
    keyboard = [
        ["üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫"],
        ["üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"]
    ]

    await update.message.reply_text(
        "üçø –ü—Ä–∏–≤–µ—Ç, –∫–∏–Ω–æ–º–∞–Ω!\n\n"
        "üîç –î–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∏–Ω–æ",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True))


async def reply(update, context):
    response = update.message.text

    if response == "üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫":
        await update.message.reply_text("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫")
    elif response == "üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è":
        await update.message.reply_text("–ß–¢–û –ü–û–ó–í–û–õ–Ø–ï–¢ –î–ï–õ–ê–¢–¨ –ë–û–¢?\n\n"
                                        "–° –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ —Ç—ã —Å–º–æ–∂–µ—à—å –∏—Å–∫–∞—Ç—å —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª, —Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ, –¥–æ–±–∞–≤–ª—è—Ç—å –≤ "
                                        "–∏–∑–±—Ä–∞–Ω–Ω–æ–µ, —Å–∫–∞—á–∏–≤–∞—Ç—å –∏ —Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ñ–ª–∞–π–Ω!\n\n\n"
                                        "–ö–ê–ö –ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø –ë–û–¢–û–ú?\n\n"
                                        "üîç –û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∏–Ω–æ –∏ –±–æ—Ç –≤—ã–¥–∞—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞, –ø—Ä–∏–º–µ—Ä—ã:\n"
                                        "‚úÖ –±–µ—Å—Å—Ç—ã–∂–∏–µ\n"
                                        "‚úÖ –¥–æ–≤–æ–¥")
    else:
        await update.message.reply_text("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫")


def main():
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))

    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, reply))

    application.run_polling()


if __name__ == '__main__':
    main()
